name: Deployment
on:
  push:
    branches: 
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
       - uses: actions/checkout@v2
       - uses: actions/setup-node@v2
         with:
           node-version: '14'
       - run: npm install
       - run: npm run build

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
       - uses: actions/checkout@v2
       - uses: actions/setup-node@v2
         with:
           node-version: '14'
       - run: npm install
       - run: npm run test
       
  push_to_docker_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Push to Docker Hub
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: homervt/newapp
          tag_with_ref: true

  deploy-to-digitalocean:
    name: Push Docker image to DigitalOcean
    runs-on: ubuntu-latest
    needs: push_to_docker_registry
    steps:
      - name: Pulling Docker Image
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Deploying to Digitalocean
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}

          script: |
            echo "docker login docker.io -u ${{ secrets.DOCKER_USERNAME }} --password ${{ secrets.DOCKER_PASSWORD }}
            IMAGE_ID=docker.io/homervt/newapp
            echo IMAGE_ID=$IMAGE_ID
            docker pull $IMAGE_ID:main
            docker update --restart=no newapp || true
            docker stop $(docker ps -a -q) || true
            docker rm $(docker ps -a -q) || true
            docker run -d --restart unless-stopped -p 3000:3000 --name newapp $IMAGE_ID:main


          
          
        
  # build-image:
  #   runs-on: ubuntu-latest
  #   needs: test
  #   steps:
  #      - uses: actions/checkout@v2
  #      - name: Build image
  #        run: docker build . --file Dockerfile --tag nextjs-blog --label "runnumber=${GITHUB_RUN_ID}"
  #      - name: Log into registry
  #        run
